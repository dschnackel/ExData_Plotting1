find.package("devtools")
install.packages("devtools")
library(devtools)
find_tools()
find_rtools()
library("ggplot2", lib.loc="~/R/win-library/3.1")
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallPkgs()
library(kernSmooth)
q()
getwd
getwd()
q()
add2 <- function(x,y){
x+y
}
add2(3,5)
above <- function(x,n){
use <- x > n
x[use]
}
x <- 1:20
above(x,12)
above <- function(x,n = 10){
use <- x > n
x[use]
}
above(x)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
}
search()
x <- 1:10
if(x > 5) {
x <- 0
}
x <-1:10
grt5 <- function(x){if(x>5){x<-0}}
grt5(x)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
str(apply)
str(lapply)
install.packages("pryr")
f <- function(){}
typeof(f)
is.function(f)
typeof(sum)
is.primitive(sum)
df <- data.frame(x=1:10,y=letters[1:10])
typeof(df)
is.object(df)
otype(df)
typeof(df$x)
is.object(df$x)
is.object(df$y)
typeof(df$y)
methods(mean)
methods("t.test")
methods(class='ts')
foo <- structure(list(), class="foo")
names("foo")
dim("foo")
class(foo)
names(foo)
structure(1:10,my_attribute="This is a vector")
s <- structure(1:10,my_attribute="This is a vector")
attr(s)
attributes(s[1])
my_attribute(s)
str(attributes(s))
attributes(s)
x <- c(a=1,b=2,c=3)
x
x <- 1:3; names(x) <- NULL
x
x <- 1:3; names(x) <- c("a","b","c")
x
setnames(1:3,NULL)
setNames(1:3,NULL)
x<-setNames(1:3,NULL)
x
x<-setNames(1:3,c("a","b","c"))
x
x<-factor(c("a","b","b","a"))
class(x)
levels(x)
set_char<-c("m","m","m")
set_factor<- factor(sex_char,levels=c("m","f"))
set_factor<- factor(set_char,levels=c("m","f"))
table(set_char)
typeof(table(set_char))
t <- table(set_char)
typeof(t)
class(t)
table(set_factor)
z<-read.csv(text="value\n12\n1\n.\n9")
typeof(z$value)
z
class(z)
class(z$value)
z<-read.csv(text="value\n12\n1\n.\n9",na.strings=".")
typeof(z$value)
class(z$value)
z$value
structure(1:5, comment="my attribute")
f1<-factor(letters)
f1
levels(f1)<-rev(levels(f1))
f1
f2<-rev(factor(letter))
f2<-rev(factor(letters))
f2
f3<-factor(letters,levels=rev(letters))
f3
library(datasets)
plot(mtcars$disp,mtcars$mpg)
plot(mtcars$disp,mtcars$mpg, xlab="Engine displacement",ylab="mpg", main="MPG vs Engine Displacement",las=1)
plot(mtcars$disp,mtcars$mpg, xlab="Engine displacement",ylab="mpg", main="MPG vs Engine Displacement",las=2)
plot(mtcars$disp,mtcars$mpg, xlab="Engine displacement",ylab="mpg", main="MPG vs Engine Displacement",las=3)
plot(mtcars$disp,mtcars$mpg, xlab="Engine displacement",ylab="mpg", main="MPG vs Engine Displacement",las=2)
plot(mtcars$disp,mtcars$mpg, xlab="Engine displacement",ylab="mpg", main="MPG vs Engine Displacement",las=3)
plot(mtcars$disp,mtcars$mpg, xlab="Engine displacement",ylab="mpg", main="MPG vs Engine Displacement",las=0)
library(ggplot2)
qplot(disp,mpg,data=mtcars)
qplot(disp,mpg,data=mtcars,ylim=c(0,35))
qplot(cty,hwy,data=mpg)
qplot(cty,hwy,data=mpg,geom="jitter")
ggplot(mtcars,aes(x=disp,y=mpg)+ geom_point())
ggplot(pressure,aes(x=temperature,y=pressure)) + geo_line()
ggplot(pressure,aes(x=temperature,y=pressure)) + geom_line()
ggplot(pressure,aes(x=temperature,y=pressure)) + geom_point()
ggplot(pressure,aes(x=temperature,y=pressure)) + geom_line()
barplot(BOD$demand)
barplot(BOD$demand,main="Graph of demand")
barplot(BOD$demand,main="Graph of demand",names.arg=BOD$Time)
table(mtcars$cyl)
cylcount<-table(mtcars$cyl)
barplot(cylcount)
qplot(mtcars$cyl)
qplot(factor(mtcars$cyl))
ggplot(mtcars,aes(factor(cyl))) + geom_bar()
hist(mtcars$cyl,break=3)
hist(mtcars$cyl,breaks=3)
rainbow(7)
mycolors<-rainbow(7)
ggplot(mtcars,aes(factor(cyl))) + geom_bar(fill=mycolors)
ggplot(mtcars,aes(factor(cyl))) + geombar(fill=mycolors)
ggplot(mtcars,aes(factor(cyl))) + geom_bar(fill=mycolors)
mycolors<-rainbow(3)
ggplot(mtcars,aes(factor(cyl))) + geom_bar(fill=mycolors)
mycolors<-heat.colors(3)
ggplot(mtcars,aes(factor(cyl))) + geom_bar(fill=mycolors)
testscores<-c(96,71,85,92,82,78,81,68,61,78,86,90)
barplot(testscores)
testcolors<- ifelse(testscores>=80,"blue","red")
barplot(testscores,testcolors)
barplot(testscores,col=testcolors)
barplot(testscores,col=testcolors,ylim=c(0,100))
barplot(testscores,col=testcolors,ylim=c(0,100),main="Test Scores")
barplot(testscores,col=testcolors,ylim=c(0,100),main="Test Scores",las=2)
barplot(testscores,col=testcolors,ylim=c(0,100),main="Test Scores",las=1)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,geom="jitter")
qplot(displ,hwy,data=mpg,color=class)
qplot(displ,hwy,data=mpg,color=cyl)
qplot(displ,hwy,data=mpg,color=model)
qplot(displ,hwy,data=mpg)+ facet_grid(.~cyl
)
qplot(displ,hwy,data=mpg)+ facet_grid(.~cyl)
qplot(displ,hwy,data=mpg)+ facet_grid(drv~.)
qplot(displ,hwy,data=mpg)+ facet_grid(drv~cyl)
qplot(displ,hwy,data=mpg)+ facet_grid(~class)
qplot(displ,hwy,data=mpg)+ facet_wrap(~class)
q()
setwd("./Github/ExData_Plotting1")
dir()
